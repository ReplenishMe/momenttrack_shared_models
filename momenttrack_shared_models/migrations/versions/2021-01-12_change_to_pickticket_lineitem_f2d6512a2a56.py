"""change to pickticket_lineitem

Revision ID: f2d6512a2a56
Revises: 9feb230e4cf1
Create Date: 2021-01-12 14:19:25.287812

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f2d6512a2a56"
down_revision = "9feb230e4cf1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pickticket_lineitem",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pick_id", sa.Integer(), nullable=True),
        sa.Column("product_id", sa.Integer(), nullable=True),
        sa.Column("license_plate_id", sa.Integer(), nullable=True),
        sa.Column("license_plate_move_id", sa.Integer(), nullable=True),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("requested_qty", sa.Float(), nullable=True),
        sa.Column("fulfilled_qty", sa.Float(), nullable=True),
        sa.Column("status", sa.String(length=31), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["license_plate_id"],
            ["license_plate.id"],
        ),
        sa.ForeignKeyConstraint(
            ["license_plate_move_id"],
            ["license_plate_move.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pick_id"],
            ["pickticket.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("pickticket_line_items")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pickticket_line_items",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("pick_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("product_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("license_plate_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "license_plate_move_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("organization_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "requested_qty",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "fulfilled_qty",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("status", sa.VARCHAR(length=31), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["license_plate_id"],
            ["license_plate.id"],
            name="pickticket_line_items_license_plate_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["license_plate_move_id"],
            ["license_plate_move.id"],
            name="pickticket_line_items_license_plate_move_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
            name="pickticket_line_items_organization_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["pick_id"],
            ["pickticket.id"],
            name="pickticket_line_items_pickticket_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"], ["product.id"], name="pickticket_line_items_product_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="pickticket_line_items_pkey"),
    )
    op.drop_table("pickticket_lineitem")
    # ### end Alembic commands ###
